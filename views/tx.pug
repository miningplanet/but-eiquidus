extends layout

block content
  include ./includes/common.pug
  - var theadClasses = [];
  if shared_pages.table_header_bgcolor != null && shared_pages.table_header_bgcolor != ''
    - theadClasses.push('table-' + shared_pages.table_header_bgcolor);
  script.
    $(document).ready(function() {
      $('span#timestampCol').html(format_unixtime(#{tx.timestamp}));

      if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
        $('span#timestampCol').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(#{tx.timestamp}, true));
        enableTooltips();
      }
    });
  .col-xs-12.col-md-12
    if transaction_page.page_header.show_img == true || transaction_page.page_header.show_title == true || transaction_page.page_header.show_description == true
      #page-header-container(style='align-items:' + (transaction_page.page_header.show_img == true && transaction_page.page_header.show_title == true && transaction_page.page_header.show_description == true ? 'flex-start' : 'center'))
        if transaction_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if transaction_page.page_header.show_title == true
            h3#page-title #{settings.locale.tx_title.replace('{1}', coin.name)}
          if transaction_page.page_header.show_description == true
            if transaction_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.tx_description.replace('{1}', coin.name).replace('{2}', tx.blockindex)
            else
              .sub-page-header.text-muted=settings.locale.tx_description.replace('{1}', coin.name).replace('{2}', tx.blockindex)
      .cardSpacer.clearfix
    .card.card-default.border-0.cardSpacer
      .card-header
        strong=settings.locale.tx_hash + ': ' + tx.txid
        if api_page.public_apis.rpc.getrawtransaction.enabled == true
          a.d-none.d-md-inline(href=`/api/getrawtransaction/#{net}?txid=${tx.txid}&decrypt=1`, style='color: var(--bs-body-color);')
            span.fa.fa-info-circle.float-end(data-bs-toggle='tooltip', data-bs-placement='top', title=settings.locale.view_raw_tx_data)
      - const tx_types = settings.get(net, 'tx_types')
      table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
        tbody
          - var confirms = (blockcount - tx.blockindex + 1);
          tr
            td.d-md-table-cell #{settings.locale.tx_block_hash}
            td.d-md-table-cell
              a.breakWord(href='/block/' + tx.blockhash + '/' + net) #{tx.blockhash}
          tr
            td.d-md-table-cell #{settings.locale.tx_type}
            td.breakWord #{tx.tx_type} #{tx_types[tx.tx_type]}
          tr
            td.d-md-table-cell #{settings.locale.tx_version}
            td.breakWord #{tx.version}
          tr
            if transaction_page.show_op_return == true
              td='OP_RETURN'
              td.breakWord #{tx.op_return}
          tr
            td #{settings.locale.confirmations}
            if confirms >= confirmations
              td #{confirms}
            else if confirms < (confirmations / 2)
              td #{confirms}
            else
              td #{confirms}
          tr
            td #{settings.locale.timestamp}
            td
              span#timestampCol
    if tx.tx_type == tx_types.indexOf('TRANSACTION_PROVIDER_REGISTER')
      .card.card-default.border-0.cardSpacer
        .card-header
          strong #{settings.locale.tx_protx_reg_version} #{tx.extra ? tx.extra[0] : 'N/A'}
        table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
          tbody
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_collateral_hash}
              td.breakWord #{tx.extra ? tx.extra[1] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_collateral_index}
              td.breakWord #{tx.extra ? tx.extra[2] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_service}
              td.breakWord #{tx.extra ? tx.extra[3] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_owner_address}
              td.breakWord #{tx.extra ? tx.extra[4] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_voting_address}
              td.breakWord #{tx.extra ? tx.extra[5] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_payout_address}
              td.breakWord #{tx.extra ? tx.extra[6] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_operator_pk}
              td.breakWord #{tx.extra ? tx.extra[7] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_operator_reward}
              td.breakWord #{tx.extra ? tx.extra[8] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_inputs_hash}
              td.breakWord #{tx.extra ? tx.extra[9] : 'N/A'}
    if tx.tx_type == tx_types.indexOf('TRANSACTION_PROVIDER_UPDATE_SERVICE')
      .card.card-default.border-0.cardSpacer
        .card-header
          strong #{settings.locale.tx_protx_update_version} #{tx.extra ? tx.extra[0] : 'N/A'}
        table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
          tbody
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_protx_hash}
              td.breakWord #{tx.extra ? tx.extra[1] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_service}
              td.breakWord #{tx.extra ? tx.extra[2] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_reg_inputs_hash}
              td.breakWord #{tx.extra ? tx.extra[3] : 'N/A'}
    if tx.tx_type == tx_types.indexOf('TRANSACTION_PROVIDER_UPDATE_REGISTRAR')
      .card.card-default.border-0.cardSpacer
        .card-header
          strong #{settings.locale.tx_protx_update_reg_version} #{tx.extra ? tx.extra[0] : 'N/A'}
        table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
          tbody
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_reg_protx_hash}
              td.breakWord #{tx.extra ? tx.extra[1] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_reg_voting_address}
              td.breakWord #{tx.extra ? tx.extra[2] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_reg_payout_address}
              td.breakWord #{tx.extra ? tx.extra[3] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_reg_operator_pk}
              td.breakWord #{tx.extra ? tx.extra[4] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_req_inputs_hash}
              td.breakWord #{tx.extra ? tx.extra[5] : 'N/A'}
    if tx.tx_type == tx_types.indexOf('TRANSACTION_PROVIDER_UPDATE_REVOKE')
      .card.card-default.border-0.cardSpacer
        .card-header
          strong #{settings.locale.tx_protx_update_revoke_version} #{tx.extra ? tx.extra[0] : 'N/A'}
        table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
          tbody
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_revoke_protx_hash}
              td.breakWord #{tx.extra ? tx.extra[1] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_revoke_reason}
              td.breakWord #{tx.extra ? tx.extra[2] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_protx_update_req_inputs_hash}
              td.breakWord #{tx.extra ? tx.extra[3] : 'N/A'}
    if tx.tx_type == tx_types.indexOf('TRANSACTION_QUORUM_COMMITMENT')
      .card.card-default.border-0.cardSpacer
        .card-header
          strong #{settings.locale.tx_qc_version} #{tx.extra ? tx.extra[0] : 'N/A'}
        table#tx-table.table.table-bordered.table-striped.summary-table.mobile-border-right
          tbody
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_height}
              td.breakWord #{tx.extra ? tx.extra[1] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_version}
              td.breakWord #{tx.extra ? tx.extra[2] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_llmq_type}
              td.breakWord #{tx.extra ? tx.extra[3] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_hash}
              td.breakWord #{tx.extra ? tx.extra[4] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_signers}
              td.breakWord #{tx.extra ? tx.extra[5] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_valid_members}
              td.breakWord #{tx.extra ? tx.extra[6] : 'N/A'}
            tr
              td.d-md-table-cell #{settings.locale.tx_qc_commitment_pk}
              td.breakWord #{tx.extra ? tx.extra[7] == '0' ? '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' : tx.extra[7] : 'N/A'}
    else if tx.vout.length < 1
      .text-center(role='alert', style='margin-bottom:0;')
        strong #{settings.locale.tx_nonstandard} #{tx.tx_type}
    else
      .row
        .col-md-6.cardSpacer
          .card.card-default.border-0
            .card-header
              strong #{settings.locale.tx_contributors}
              span.fa.fa-arrow-right.float-end.d-none.d-md-block
            table#contributors.table.table-bordered.table-striped.table-hover.summary-table.mobile-border-right
              thead
                tr(class=theadClasses)
                  th #{settings.locale.tx_address}
                  if (tx.vin.length > 0)
                    if tx.vin[0].addresses != 'coinbase'
                      th.text-center #{coin.symbol}
              tbody
                if tx.vin.length > 0
                  each address in tx.vin
                    if address.addresses == 'coinbase'
                      tr.text-center
                        td.text-center #{settings.locale.new_coins}
                    else
                      - var ramount = Number(address.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                      - var ramountParts = ramount.split('.');
                      tr
                        td.addressCol
                          if address.addresses != 'hidden_address' && address.addresses != 'unknown_address'
                            a.breakWord(href='/address/' + address.addresses + '/' + net)
                              if address.claim_name == null || address.claim_name == ''
                                =address.addresses
                              else
                                =address.claim_name
                            include ./includes/rl_labels.pug
                          else if address.addresses == 'hidden_address'
                            if address_page.enable_hidden_address_view == true
                              a.breakWord(href='/address/hidden_address/' + net)
                                =settings.locale.hidden_sender
                            else
                              =settings.locale.hidden_sender
                          else
                            if address_page.enable_unknown_address_view == true
                              a.breakWord(href='/address/unknown_address/' + net)
                                =settings.locale.unknown_sender
                            else
                              =settings.locale.unknown_sender
                        td.text-end #{ramountParts[0]}.
                          span.decimal #{ramountParts[1]}
                else
                  tr.text-center
                    td.bottom-border-1 #{settings.locale.proof_of_stake}
        .col-md-6.cardSpacer
          .card.card-default.border-0
            .card-header
              strong #{settings.locale.tx_recipients}
            table#recipients.table.table-bordered.table-striped.table-hover.summary-table.mobile-border-right
              thead
                tr(class=theadClasses)
                  th #{settings.locale.tx_address}
                  th.text-center #{coin.symbol}
              tbody
                each address in tx.vout
                  if tx.vout.length > 0
                    - var ramount = Number(address.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                    - var ramountParts = ramount.split('.');
                    tr
                      if address.addresses != 'hidden_address' && address.addresses != 'unknown_address'
                        td.addressCol
                          a.breakWord(href='/address/' + address.addresses + '/' + net)
                            if address.claim_name == null || address.claim_name == ''
                              =address.addresses
                            else
                              =address.claim_name
                          include ./includes/rl_labels.pug
                        td.text-end #{ramountParts[0]}.
                          span.decimal #{ramountParts[1]}
                      else if address.amount > 0
                        td.addressCol
                          if address.addresses == 'hidden_address'
                            if address_page.enable_hidden_address_view == true
                              a.breakWord(href='/address/hidden_address/' + net)
                                =settings.locale.hidden_recipient
                            else
                              =settings.locale.hidden_recipient
                          else
                            if address_page.enable_unknown_address_view == true
                              a.breakWord(href='/address/unknown_address/' + net)
                                =settings.locale.unknown_recipient
                            else
                              =settings.locale.unknown_recipient
                        td.text-end #{ramountParts[0]}.
                          span.decimal #{ramountParts[1]}
                      else
                        td(colspan='2')
                          if address.addresses == 'hidden_address'
                            if address_page.enable_hidden_address_view == true
                              a.breakWord(href='/address/hidden_address/' + net)
                                =settings.locale.hidden_recipient
                            else
                              =settings.locale.hidden_recipient
                          else
                            if address_page.enable_unknown_address_view == true
                              a.breakWord(href='/address/unknown_address/' + net)
                                =settings.locale.unknown_recipient
                            else
                              =settings.locale.unknown_recipient
                  else
                    - var ramount = Number(address.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                    - var ramountParts = ramount.split('.');
                    tr
                      td.addressCol
                        a.breakWord(href='/address/' + address.addresses+ '/' + net)
                          if address.claim_name == null || address.claim_name == ''
                            =address.addresses
                          else
                            =address.claim_name
                        include ./includes/rl_labels.pug
                      td.text-end #{ramountParts[0]}.
                        span.decimal #{ramountParts[1]}