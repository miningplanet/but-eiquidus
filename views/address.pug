extends layout

block content
  include ./includes/common.pug
  script.
    var hashAddress = "#{address.a_id}";
    var setting_maxTxCount = parseInt("#{api_page.public_apis.ext.getaddresstxs.max_items_per_query}");
    var setting_txPerPage = parseInt("#{address_page.history_table.items_per_page}");
    var lengthMenuOptsAdd = !{JSON.stringify(address_page.history_table.page_length_options)};
    var lengthMenuOpts = [];
    var addedLength = false;
    for (i = 0; i < lengthMenuOptsAdd.length; i++) {
      if (setting_maxTxCount >= lengthMenuOptsAdd[i]) {
        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage) {
            lengthMenuOpts.push(setting_txPerPage);
            addedLength = true;
          }
        }

        lengthMenuOpts.push(lengthMenuOptsAdd[i]);

        if (!addedLength) {
          if (lengthMenuOptsAdd[i] > setting_txPerPage)
            lengthMenuOpts.push(setting_txPerPage);
          if (lengthMenuOptsAdd[i] == setting_txPerPage || lengthMenuOptsAdd[i] > setting_txPerPage)
            addedLength = true;
        }
      }
    }
    if (!addedLength && setting_txPerPage <= setting_maxTxCount && setting_txPerPage != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_txPerPage);
    if (!addedLength && setting_txPerPage > setting_maxTxCount && setting_maxTxCount != lengthMenuOpts[lengthMenuOpts.length - 1])
      lengthMenuOpts.push(setting_maxTxCount);
    if (setting_maxTxCount < setting_txPerPage) {
      var displayLengthMax = setting_maxTxCount;
    } else {
      var displayLengthMax = setting_txPerPage;
    }
    $(document).ready(function () {
      var rtable = $('#address-txs').dataTable({
        autoWidth: false,
        searching: false,
        ordering: false,
        responsive: true,
        lengthChange: true,
        processing: true,
        serverSide: true,
        iDisplayLength: displayLengthMax,
        lengthMenu: lengthMenuOpts,
        scrollX: true,
        ajax: {
          url: '/ext/getaddresstxs/' + hashAddress + '/#{net}',
          beforeSend: function(jqXHR, settings) {
            settings.url = settings.url.substring(0, settings.url.indexOf('?')) + '/' + getParameterByName('start', settings.url) + '/' + getParameterByName('length', settings.url) + '/internal';
            return true;
          }
        },
        language: {
          paginate: {
            previous: '<',
            next: '>'
          }
        },
        rowCallback: function (row, data, index) {
          var timestamp = data[0];
          var txhash = data[1];
          var out = data[2];
          var vin = data[3];
          var balance = data[4].toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
          var balanceParts = balance.split('.');
          $("td:eq(0)", row).html('<a href="/tx/' + txhash + '/#{net}"><span class="entity" data-bs-toggle="tooltip" data-bs-placement="top" title="#{settings.locale.view_tx}">&#8627</span></a>').addClass('text-center d-table-cell d-md-none');
          $("td:eq(1)", row).html('<a href="/tx/' + txhash + '/#{net}">' + txhash + '</a>').addClass('txCol breakWord d-none d-md-table-cell');
          var amount = 0;
          var updown = '';

          if (out > 0 && vin > 0) {
            amount = Number(out - vin);
            if (amount < 0) {
              amount = Number(amount * -1).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
              updown = '-';
            } else if (amount > 0) {
              amount = amount.toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
              updown = '+';
            } else {
              amount = amount.toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
            }
          } else if (out > 0) {
            amount = Number(out).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
            updown = '+';
          } else {
            amount = Number(vin).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
            updown = '-';
          }
          var amountParts = amount.split('.');
          $("td:eq(2)", row).html(updown + amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>').addClass('text-end');
          $("td:eq(3)", row).html(balanceParts[0] + '.<span class="decimal">' + balanceParts[1] + '</span>').addClass('text-end');
          $("td:eq(4)", row).html(format_unixtime(timestamp)).addClass('text-center');
        },
        fnDrawCallback: function(settings) {
          enableTooltips();
        }
      });
      $('.summary-table').dataTable({
        info: false,
        paging: false,
        searching: false,
        ordering: false,
        responsive: true,
        scrollX: true,
        fnDrawCallback: function(settings) {}
      });
    });
  - var balance = Number((address.received - address.sent) / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
  - var balanceParts = balance.split('.');
  - var sent = Number(address.sent /100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
  - var sentParts = sent.split('.');
  - var received = Number(address.received / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
  - var receivedParts = received.split('.');
  - var theadClasses = [];
  if shared_pages.table_header_bgcolor != null && shared_pages.table_header_bgcolor != ''
    - theadClasses.push('table-' + shared_pages.table_header_bgcolor);
  .col-xs-12.col-md-12
    if address_page.page_header.show_img == true || address_page.page_header.show_title == true || address_page.page_header.show_description == true
      #page-header-container(style='align-items:' + (address_page.page_header.show_img == true && address_page.page_header.show_title == true && address_page.page_header.show_description == true ? 'flex-start' : 'center'))
        if address_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if address_page.page_header.show_title == true
            h3#page-title #{settings.locale.a_title.replace('{1}', coin.name)}
          if address_page.page_header.show_description == true
            if address_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.a_description.replace('{1}', coin.name).replace('{2}', (address.a_id == 'hidden_address' ? settings.locale.hidden_address : (address.a_id == 'unknown_address' ? settings.locale.unknown_address : address.a_id)))
            else
              .sub-page-header.text-muted=settings.locale.a_description.replace('{1}', coin.name).replace('{2}', (address.a_id == 'hidden_address' ? settings.locale.hidden_address : (address.a_id == 'unknown_address' ? settings.locale.unknown_address : address.a_id)))
      .cardSpacer.clearfix
    .card.card-default.border-0.card-address-summary.cardSpacer
      .card-header(style='position:relative;')
        if claim_address_page.enabled == false || address.name == null || address.name == ''
          if address.a_id == 'hidden_address'
            strong #{settings.locale.hidden_address}
          else if address.a_id == 'unknown_address'
            strong #{settings.locale.unknown_address}
          else
            strong #{address.a_id}
        else
          strong #{address.name}
        | &#8203;
        include ./includes/rl_labels.pug
        if (!settings.labels[address.a_id] || !settings.labels[address.a_id].enabled) && claim_address_page.enabled == true
          a#claim-address.fw-bold(href='/claim/' + address.a_id, style='font-size:smaller;padding-bottom:0;')
            if address.name == null || address.name == ''
              =" Is this yours? Claim it now for free!"
            else
              =" Update claimed address"
      table#address-summary.table.table-bordered.table-striped.summary-table.mobile-border-right(style='border-top:0;margin-top:0 !important;')
        thead(style='visibility: collapse !important;')
          tr
            th
            th
        tbody
          tr
            td.text-center.addr-summary
              img.qrcode(src='/qr/' + address.a_id)
            td
          tr
            td #{settings.locale.rl_balance}
              span.small.fw-normal  (#{coin.symbol})
            td.addr-summary #{balanceParts[0]}.
              span.decimal #{balanceParts[1]}
          if address_page.show_sent_received == true
            tr
              td #{settings.locale.total_sent}
                span.small.fw-normal  (#{coin.symbol})
              td.addr-summary #{sentParts[0]}.
                span.decimal #{sentParts[1]}
          if address_page.show_sent_received == true
            tr
              td #{settings.locale.total_received}
                span.small.fw-normal  (#{coin.symbol})
              td.addr-summary #{receivedParts[0]}.
                span.decimal #{receivedParts[1]}
    .card.card-default.border-0.cardSpacer
      .card-header
        strong #{settings.locale.ex_latest_transactions}
      table#address-txs.table.table-bordered.table-striped.table-paging.table-hover.mobile-border-right
        thead
          tr(class=theadClasses)
            th.d-table-cell.d-md-none
            th.d-none.d-md-table-cell #{settings.locale.tx_hash}
            th.text-center #{coin.symbol}
            th.text-center #{settings.locale.rl_balance}
            th.text-center #{settings.locale.timestamp}
        tbody