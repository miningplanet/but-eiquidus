extends layout

block content
  script.
    $(document).ready(function() {
      if (#{settings.shared_pages.page_header.page_title_image.enable_animation} == true && #{settings.api_page.page_header.show_img} == true)
        startRotateElement('img#header-img');
    });
  .col-md-12.cardSpacer
    if settings.api_page.page_header.show_img == true || settings.api_page.page_header.show_title == true || settings.api_page.page_header.show_description == true
      #page-header-container(style='align-items:' + (settings.api_page.page_header.show_img == true && settings.api_page.page_header.show_title == true && settings.api_page.page_header.show_description == true ? 'flex-start' : 'center'))
        if settings.api_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=(settings.shared_pages.page_header.page_title_image == null || settings.shared_pages.page_header.page_title_image.image_path == null || settings.shared_pages.page_header.page_title_image.image_path == '' ? '/img/page-title-img.png' : settings.shared_pages.page_header.page_title_image.image_path))
        #page-title-container
          if settings.api_page.page_header.show_title == true
            h3#page-title #{settings.locale.api_title.replace('{1}', settings.coin.name)}
          if settings.api_page.page_header.show_description == true
            if settings.api_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.api_description.replace('{1}', settings.coin.name)
            else
              .sub-page-header.text-muted=settings.locale.api_description.replace('{1}', settings.coin.name)
      .cardSpacer.clearfix
    .card.card-default.border-0
      .card-header
        strong #{settings.locale.api_documentation}
      .card-body
        if settings.api_page.show_logo == true
          img(src=settings.shared_pages.logo, style='margin:0;height:128px;')
          hr
        - var hide_rpc_api_section = !(settings.api_page.public_apis.rpc.getdifficulty.enabled == true && settings.api_cmds['getdifficulty'] != null && settings.api_cmds['getdifficulty'] != '') && !(settings.api_page.public_apis.rpc.getconnectioncount.enabled == true && settings.api_cmds['getconnectioncount'] != null && settings.api_cmds['getconnectioncount'] != '') && !(settings.api_page.public_apis.rpc.getblockcount.enabled == true && settings.api_cmds['getblockcount'] != null && settings.api_cmds['getblockcount'] != '') && !(settings.api_page.public_apis.rpc.getblockhash.enabled == true && settings.api_cmds['getblockhash'] != null && settings.api_cmds['getblockhash'] != '') && !(settings.api_page.public_apis.rpc.getblock.enabled == true && settings.api_cmds['getblock'] != null && settings.api_cmds['getblock'] != '') && !(settings.api_page.public_apis.rpc.getrawtransaction.enabled == true && settings.api_cmds['getrawtransaction'] != null && settings.api_cmds['getrawtransaction'] != '') && !(settings.api_page.public_apis.rpc.getnetworkhashps.enabled == true && settings.shared_pages.show_hashrate == true && settings.api_cmds['getnetworkhashps'] != null && settings.api_cmds['getnetworkhashps'] != '') && !(settings.api_page.public_apis.rpc.getvotelist.enabled == true && settings.api_cmds['getvotelist'] != null && settings.api_cmds['getvotelist'] != '') && !(settings.api_page.public_apis.rpc.getmasternodecount.enabled == true && settings.api_cmds['getmasternodecount'] != null && settings.api_cmds['getmasternodecount'] != '') && (!settings.blockchain_specific.heavycoin.enabled || (!(settings.blockchain_specific.heavycoin.public_apis.getmaxmoney.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getmaxvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getphase.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != null && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getreward.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != null && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getsupply.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != null && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getnextrewardestimate.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != '') && !(settings.blockchain_specific.heavycoin.public_apis.getnextrewardwhenstr.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != '')));
        - var hide_ext_api_section = !settings.api_page.public_apis.ext.getmoneysupply.enabled && !settings.api_page.public_apis.ext.getdistribution.enabled && !settings.api_page.public_apis.ext.getaddress.enabled && !settings.api_page.public_apis.ext.getaddresstxs.enabled && !settings.api_page.public_apis.ext.gettx.enabled && !settings.api_page.public_apis.ext.getbalance.enabled && !settings.api_page.public_apis.ext.getlasttxs.enabled && !settings.api_page.public_apis.ext.getcurrentprice.enabled && !settings.api_page.public_apis.ext.getnetworkpeers.enabled && !settings.api_page.public_apis.ext.getbasicstats.enabled && !settings.api_page.public_apis.ext.getsummary.enabled && !(settings.api_page.public_apis.ext.getmasternodelist.enabled && settings.api_cmds['getmasternodelist'] != null && settings.api_cmds['getmasternodelist'] != '') && !settings.api_page.public_apis.ext.getmasternoderewards.enabled && !settings.api_page.public_apis.ext.getmasternoderewardstotal.enabled;
        - var hide_electrum_api_section = false;
        if !hide_rpc_api_section
          h3 #{settings.locale.api_calls}
          p
            em Return data from coind
          ul
            if settings.api_page.public_apis.rpc.getblockchaininfo.enabled == true && settings.api_cmds['getblockchaininfo'] != null && settings.api_cmds['getblockchaininfo'] != ''
              li
                p
                  div.fw-bold getblockchaininfo
                  div
                    em #{settings.locale.api_getblockchaininfo}
                  a(href='/api/getblockchaininfo') #{address}/api/getblockchaininfo
            if settings.api_page.public_apis.rpc.getdifficulty.enabled == true && settings.api_cmds['getdifficulty'] != null && settings.api_cmds['getdifficulty'] != ''
              li
                p
                  div.fw-bold getdifficulty
                  div
                    em #{settings.locale.api_getdifficulty}
                      ul
                        li Ghostrider (CPU)
                        li Yespower (CPU)
                        li Lyra2z330 (GPU)
                        li Sha256d (ASIC)
                        li Scrypt (ASIC)
                        li Butkscrypt (ASIC)
                  a(href='/api/getdifficulty') #{address}/api/getdifficulty
            if settings.api_page.public_apis.rpc.getconnectioncount.enabled == true && settings.api_cmds['getconnectioncount'] != null && settings.api_cmds['getconnectioncount'] != ''
              li
                p
                  div.fw-bold getconnectioncount
                  div
                    em #{settings.locale.api_getconnectioncount}
                  a(href='/api/getconnectioncount') #{address}/api/getconnectioncount
            if settings.api_page.public_apis.rpc.getblockcount.enabled == true && settings.api_cmds['getblockcount'] != null && settings.api_cmds['getblockcount'] != ''
              li
                p
                  div.fw-bold getblockcount
                  div
                    em #{settings.locale.api_getblockcount}
                  a(href='/api/getblockcount') #{address}/api/getblockcount
            if settings.api_page.public_apis.rpc.getblockhash.enabled == true && settings.api_cmds['getblockhash'] != null && settings.api_cmds['getblockhash'] != ''
              li
                p
                  div.fw-bold getblockhash [index]
                  div
                    em #{settings.locale.api_getblockhash}
                  a(href='/api/getblockhash?index=' + settings.api_page.sample_data.blockindex) #{address}/api/getblockhash?index=#{settings.api_page.sample_data.blockindex}
            if settings.api_page.public_apis.rpc.getblock.enabled == true && settings.api_cmds['getblock'] != null && settings.api_cmds['getblock'] != ''
              li
                p
                  div.fw-bold getblock [hash]
                  div
                    em #{settings.locale.api_getblock}
                  a(href='/api/getblock?hash=' + settings.api_page.sample_data.blockhash) #{address}/api/getblock?hash=#{settings.api_page.sample_data.blockhash}
            if settings.api_page.public_apis.rpc.getrawtransaction.enabled == true && settings.api_cmds['getrawtransaction'] != null && settings.api_cmds['getrawtransaction'] != ''
              li
                p
                  div.fw-bold getrawtransaction [txid] [decrypt]
                  div
                    em #{settings.locale.api_getrawtransaction}
                  div
                    a(href='/api/getrawtransaction?txid=' + settings.api_page.sample_data.txhash + '&decrypt=0') #{address}/api/getrawtransaction?txid=#{settings.api_page.sample_data.txhash}&decrypt=0
                  div
                    a(href='/api/getrawtransaction?txid=' + settings.api_page.sample_data.txhash + '&decrypt=1') #{address}/api/getrawtransaction?txid=#{settings.api_page.sample_data.txhash}&decrypt=1
            if settings.api_page.public_apis.rpc.getnetworkhashps.enabled == true && settings.shared_pages.show_hashrate == true && settings.api_cmds['getnetworkhashps'] != null && settings.api_cmds['getnetworkhashps'] != ''
              li
                p
                  div.fw-bold getnetworkhashps
                  div
                    em #{settings.locale.api_getnetworkhashps}
                      ul
                        li Ghostrider (CPU)
                        li Yespower (CPU)
                        li Lyra2z330 (GPU)
                        li Sha256d (ASIC)
                        li Scrypt (ASIC)
                        li Butkscrypt (ASIC)
                  a(href='/api/getnetworkhashps') #{address}/api/getnetworkhashps
            if settings.api_page.public_apis.rpc.getvotelist.enabled == true && settings.api_cmds['getvotelist'] != null && settings.api_cmds['getvotelist'] != ''
              li
                p
                  div.fw-bold getvotelist
                  div
                    em #{settings.locale.api_getvotelist}
                  a(href='/api/getvotelist') #{address}/api/getvotelist
            if settings.api_page.public_apis.rpc.getmasternodecount.enabled == true && settings.api_cmds['getmasternodecount'] != null && settings.api_cmds['getmasternodecount'] != ''
              li
                p
                  div.fw-bold getmasternodecount
                  div
                    em #{settings.locale.api_getmasternodecount}
                  a(href='/api/getmasternodecount') #{address}/api/getmasternodecount
            if settings.blockchain_specific.heavycoin.enabled == true
              if settings.blockchain_specific.heavycoin.public_apis.getmaxmoney.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxmoney'] != ''
                li
                  p
                    div.fw-bold getmaxmoney
                    div
                      em #{settings.locale.api_getmaxmoney}
                    a(href='/api/getmaxmoney') #{address}/api/getmaxmoney
              if settings.blockchain_specific.heavycoin.public_apis.getmaxvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getmaxvote'] != ''
                li
                  p
                    div.fw-bold getmaxvote
                    div
                      em #{settings.locale.api_getmaxvote}
                    a(href='/api/getmaxvote') #{address}/api/getmaxvote
              if settings.blockchain_specific.heavycoin.public_apis.getvote.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != null && settings.blockchain_specific.heavycoin.api_cmds['getvote'] != ''
                li
                  p
                    div.fw-bold getvote
                    div
                      em #{settings.locale.api_getvote}
                    a(href='/api/getvote') #{address}/api/getvote
              if settings.blockchain_specific.heavycoin.public_apis.getphase.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != null && settings.blockchain_specific.heavycoin.api_cmds['getphase'] != ''
                li
                  p
                    div.fw-bold getphase
                    div
                      em #{settings.locale.api_getphase}
                    a(href='/api/getphase') #{address}/api/getphase
              if settings.blockchain_specific.heavycoin.public_apis.getreward.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != null && settings.blockchain_specific.heavycoin.api_cmds['getreward'] != ''
                li
                  p
                    div.fw-bold getreward
                    div
                      em #{settings.locale.api_getreward}
                    a(href='/api/getreward') #{address}/api/getreward
              if settings.blockchain_specific.heavycoin.public_apis.getsupply.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != null && settings.blockchain_specific.heavycoin.api_cmds['getsupply'] != ''
                li
                  p
                    div.fw-bold getsupply
                    div
                      em #{settings.locale.api_getsupply}
                    a(href='/api/getsupply') #{address}/api/getsupply
              if settings.blockchain_specific.heavycoin.public_apis.getnextrewardestimate.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardestimate'] != ''
                li
                  p
                    div.fw-bold getnextrewardestimate
                    div
                      em #{settings.locale.api_getnextrewardestimate}
                    a(href='/api/getnextrewardestimate') #{address}/api/getnextrewardestimate
              if settings.blockchain_specific.heavycoin.public_apis.getnextrewardwhenstr.enabled == true && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != null && settings.blockchain_specific.heavycoin.api_cmds['getnextrewardwhenstr'] != ''
                li
                  p
                    div.fw-bold getnextrewardwhenstr
                    div
                      em #{settings.locale.api_getnextrewardwhenstr}
                    a(href='/api/getnextrewardwhenstr') #{address}/api/getnextrewardwhenstr
          hr
        if !hide_ext_api_section
          h3 Extended API
          p
            em Return data from local indexes
          ul
            if settings.api_page.public_apis.ext.getmoneysupply.enabled == true
              li
                p
                  div.fw-bold getmoneysupply
                  div
                    em Returns current money supply
                  a(href='/ext/getmoneysupply') #{address}/ext/getmoneysupply
            if settings.api_page.public_apis.ext.getdistribution.enabled == true
              li
                p
                  div.fw-bold getdistribution
                  div
                    em Returns wealth distribution stats
                  a(href='/ext/getdistribution') #{address}/ext/getdistribution
            if settings.api_page.public_apis.ext.getaddress.enabled == true
              li
                p
                  div.fw-bold getaddress (/ext/getaddress/hash)
                  div
                    em Returns information for given address
                  a(href='/ext/getaddress/' + settings.api_page.sample_data.address) #{address}/ext/getaddress/#{settings.api_page.sample_data.address}
            if settings.api_page.public_apis.ext.getaddresstxs.enabled == true
              li
                p
                  div.fw-bold getaddresstxs (/ext/getaddresstxs/hash/start/length)
                  div
                    em Returns last [length] transactions for address [hash], starting from offset [start]
                  a(href='/ext/getaddresstxs/' + settings.api_page.sample_data.address + '/0/50') #{address}/ext/getaddresstxs/#{settings.api_page.sample_data.address}/0/50
            if settings.api_page.public_apis.ext.gettx.enabled == true
              li
                p
                  div.fw-bold gettx (/ext/gettx/hash)
                  div
                    em Returns information for given tx hash
                  a(href='/ext/gettx/' + settings.api_page.sample_data.txhash) #{address}/ext/gettx/#{settings.api_page.sample_data.txhash}
            if settings.api_page.public_apis.ext.getbalance.enabled == true
              li
                p
                  div.fw-bold getbalance (/ext/getbalance/hash)
                  div
                    em Returns current balance of given address
                  a(href='/ext/getbalance/' + settings.api_page.sample_data.address) #{address}/ext/getbalance/#{settings.api_page.sample_data.address}
            if settings.api_page.public_apis.ext.getlasttxs.enabled == true
              li
                p
                  div.fw-bold getlasttxs (/ext/getlasttxs/min/start/length)
                  div
                    em Returns last [length] transactions greater than [min] coins, starting from offset [start]
                  div
                    em Note: [length] is limited to returning #{settings.api_page.public_apis.ext.getlasttxs.max_items_per_query} records per query
                  div
                    a(href='/ext/getlasttxs/100/0/100') #{address}/ext/getlasttxs/100/0/100
            if settings.api_page.public_apis.ext.getcurrentprice.enabled == true
              li
                p
                  div.fw-bold getcurrentprice
                  div
                    em Returns last known exchange prices in
                      ul
                        li US Dollar (USD)
                        li Theter (USDT)
                        li Euro (EUR)
                        li Chinese Yuan (CNY)
                        li Indian Rupees (INR)
                        li Japanese Yen (JPY)
                        li British Pound Sterling (GBP)
                        li Russian Rubel (RUB)
                        li Brazilian Real (BRL)
                        li Bitcoin (BTC)
                  a(href='/ext/getcurrentprice') #{address}/ext/getcurrentprice
            if settings.api_page.public_apis.ext.getnetworkpeers.enabled == true
              li
                p
                  div.fw-bold getnetworkpeers
                  div
                    em Returns the list of network peers that have connected to the explorer node in the last 24 hours
                  a(href='/ext/getnetworkpeers') #{address}/ext/getnetworkpeers
            if settings.api_page.public_apis.ext.getbasicstats.enabled == true
              li
                p
                  div.fw-bold getbasicstats
                  div
                    em="Returns basic statistics about the coin including: block count, circulating supply, USD price, " + settings.markets_page.default_exchange.trading_pair.split('/')[1].toUpperCase() + " price" + (settings.api_page.public_apis.rpc.getmasternodecount.enabled == true && settings.api_cmds['getmasternodecount'] != null && settings.api_cmds['getmasternodecount'] != '' ? ', ' + '# of masternodes' : '')
                  a(href='/ext/getbasicstats') #{address}/ext/getbasicstats
            if settings.api_page.public_apis.ext.getticker.enabled == true
              li
                p
                  div.fw-bold getticker [mode] Use 'all'.
                  div
                    em="Returns the ticker about the coin, optional about a certain category, including: block count, circulating supply, USD price, ..." 
                  a(href='/ext/getticker/all') #{address}/ext/getticker/all
            if settings.api_page.public_apis.ext.getmarkets.enabled == true
              li
                p
                  div.fw-bold getmarkets [mode] Use 'summary' or 'full'.
                  div
                    em="Returns the list of markets with summary and optional buys, sells, and chart data if mode is 'full'." 
                  div
                    a(href='/ext/getmarkets/summary') #{address}/ext/getmarkets/summary
                  div
                    a(href='/ext/getmarkets/full') #{address}/ext/getmarkets/full
            if settings.api_page.public_apis.ext.getsummary.enabled == true
              li
                p
                  div.fw-bold getsummary
                  div
                    em="Returns a summary of coin data including: difficulty, hybrid difficulty, circulating supply, hash rate, " + settings.markets_page.default_exchange.trading_pair.split('/')[1].toUpperCase() + " price, network connection count, block count" + (settings.api_page.public_apis.rpc.getmasternodecount.enabled == true && settings.api_cmds['getmasternodecount'] != null && settings.api_cmds['getmasternodecount'] != '' ? ', ' + 'count of online masternodes' + ', ' + 'count of offline masternodes' : '')
                  a(href='/ext/getsummary') #{address}/ext/getsummary
            if settings.api_page.public_apis.ext.getmasternodelist.enabled == true && settings.api_cmds['getmasternodelist'] != null && settings.api_cmds['getmasternodelist'] != ''
              li
                p
                  div.fw-bold getmasternodelist
                  div
                    em #{settings.locale.api_getmasternodelist}
                  a(href='/ext/getmasternodelist') #{address}/ext/getmasternodelist
            if settings.api_page.public_apis.ext.getmasternoderewards.enabled == true
              li
                p
                  div.fw-bold getmasternoderewards (/ext/getmasternoderewards/hash/since)
                  div
                    em Returns a list of masternode reward transactions for address [hash] that arrived after block height [since]
                  a(href='/ext/getmasternoderewards/' + settings.api_page.sample_data.address + '/' + settings.api_page.sample_data.blockindex) #{address}/ext/getmasternoderewards/#{settings.api_page.sample_data.address}/#{settings.api_page.sample_data.blockindex}
            if settings.api_page.public_apis.ext.getmasternoderewardstotal.enabled == true
              li
                p
                  div.fw-bold getmasternoderewardstotal (/ext/getmasternoderewardstotal/hash/since)
                  div
                    em Returns the total number of coins earned in masternode rewards for address [hash] that arrived after block height [since]
                  a(href='/ext/getmasternoderewardstotal/' + settings.api_page.sample_data.address + '/' + settings.api_page.sample_data.blockindex) #{address}/ext/getmasternoderewardstotal/#{settings.api_page.sample_data.address}/#{settings.api_page.sample_data.blockindex}
          hr
        h3 Linking (GET)
        p
          em Linking to the explorer
        ul
          li
            p
              div.fw-bold transaction (/tx/txid)
              a(href='/tx/' + settings.api_page.sample_data.txhash) #{address}/tx/#{settings.api_page.sample_data.txhash}
          li
            p
              div.fw-bold block (/block/hash)
              a(href='/block/' + settings.api_page.sample_data.blockhash) #{address}/block/#{settings.api_page.sample_data.blockhash}
          li
            p
              div.fw-bold address (/address/hash)
              a(href='/address/' + settings.api_page.sample_data.address) #{address}/address/#{settings.api_page.sample_data.address}
          li
            p
              div.fw-bold qrcode (/qr/hash)
              a(href='/qr/' + settings.api_page.sample_data.address) #{address}/qr/#{settings.api_page.sample_data.address}
          hr
        if !hide_electrum_api_section
          h3 ElectrumX API (JSON-RPC 2.0)
          p ElectrumX servers for ButKoin light wallets (former Bitcoin Lightning) are available at 
            ul 
              li 88.99.186.230
              li 95.216.204.251
              li 116.203.130.246
              li 135.181.36.174
          p ports
            ul
              li 50001 TCP
              li 50002 TLS
              li 50003 Websocket
              li 50004 TLS Websocket
          p &nbsp;
          ul
            li
              p
                div.fw-bold version
                div
                  em Returns the server version (all clients must request this resource first, but only once per session).
                  p 
                    b {"id": "clientID", "method": "server.version", "params": []}
                  code -> {"jsonrpc":"2.0","result":["ElectrumX 1.16.0","1.4"],"id":"clientID"}
            li
              p
                div.fw-bold ping
                div
                  em Pings the server.
                  p 
                    b {"id": "clientID", "method": "server.ping", "params": []}
                  code -> {"jsonrpc":"2.0","result":null,"id":"clientID"}
            li
              p
                div.fw-bold banner
                div
                  em Returns the server banner.
                  p 
                    b {"id": "clientID", "method": "server.banner", "params": []}
                  code -> {"jsonrpc":"2.0","result":"You are connected to an ElectrumX 1.16.0 server.","id":"clientID"}
            li
              p
                div.fw-bold donation address
                div
                  em Returns the servers donation address.
                  p 
                    b {"id": "clientID", "method": "server.donation_address", "params": []}
                  code -> {"jsonrpc":"2.0","result":" XvrHWjw7zd4CQZkxbiZGt3dGE53vjrUGrs","id":"clientID"}
            li
              p
                div.fw-bold features
                div
                  em Returns the servers service list.
                  p 
                    b {"id": "clientID", "method": "server.features", "params": []}
                  code -> {"jsonrpc":"2.0","result":{"hosts":{"88.99.186.230":{"tcp_port":50001,"ssl_port":50002,"ws_port":50003,"wss_port":50004}},"pruning":null,"server_version":"ElectrumX 1.16.0","protocol_min":"1.4","protocol_max":"1.4.2","genesis_hash":"001787e5f9c3cd249f84f0142071f6098d9e3b7ec8591ff73543ddc4900c1dc2","hash_function":"sha256","services":["tcp://88.99.186.230:50001","ssl://88.99.186.230:50002","ws://88.99.186.230:50003","wss://88.99.186.230:50004"]},"id":"clientID"}
            li
              p
                div.fw-bold estimate transaction fee
                div
                  em Returns the estimated transaction fee for the given number of confirmations.
                  p 
                    b {"id": "clientID", "method": "blockchain.estimatefee", "params": ["5"]}
                  code -> {"jsonrpc":"2.0","result":1.047e-05,"id":"clientID"}
            li
              p
                div.fw-bold relay fee
                div
                  em Returns the minimum fee a low-priority transaction has to pay.
                  p 
                    b {"id": "clientID", "method": "blockchain.relayfee", "params": []}
                  code -> {"jsonrpc":"2.0","result":1e-05,"id":"clientID"}
            li
              p
                div.fw-bold subscribe peer discovery
                div
                  em Returns the list of But ElectrumX network peers and subscribes to changes of this list.
                  p 
                    b {"id": "clientID", "method": "server.peers.subscribe", "params": []}
                  code -> {"jsonrpc":"2.0","result":[["135.181.36.174","135.181.36.174",["v1.4.2","s50002","t50001"]],["116.203.130.246","116.203.130.246",["v1.4.2","s50002","t50001"]],["88.99.186.230","88.99.186.230",["v1.4.2","s50002","t50001"]]],"id":"clientID"}
            li
              p
                div.fw-bold get block header
                div
                  em Returns the list of block header for the given height.
                  p 
                    b {"id": "clientID", "method": "blockchain.block.header", "params": ["10"]}
                  code -> {"jsonrpc":"2.0","result":"00080020...92010000","id":"clientID"}
            li
              p
                div.fw-bold get block headers
                div
                  em Returns a given number of block headers from the height given as one string. Max number is 2016.
                  p 
                    b {"id": "clientID", "method": "blockchain.block.headers", "params": ["437123", "100"]}
                  code -> {"jsonrpc":"2.0","result":{"hex":"00280020...c1ea84fa","count":11,"max":2016},"id":"clientID"}
            li
              p
                div.fw-bold address balance
                div
                  em Returns the balance for the given script hash in BUTK .
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.get_balance", "params": ["b8b56d50373d2c9b57d623e5379dd7a10708a563372a18b6d7ddedf4f2400855"]}
                  code -> {"jsonrpc":"2.0","result":{"confirmed":11321996296013,"unconfirmed":0},"id":"clientID"}
            li
              p
                div.fw-bold list unspent
                div
                  em Returns unspent transaction outputs for the given script hash in BUTK.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.listunspent", "params": ["b8b56d50373d2c9b57d623e5379dd7a10708a563372a18b6d7ddedf4f2400855"]}
                  code -> {"jsonrpc":"2.0","result":[{"tx_hash":"d554ac7a95b0f363fa6fd691acec43afb2ccd7cb4c7d4383d97ca62e26413af5","tx_pos":1,"height":80666,"value":8796296296300},{"tx_hash":"2599c9ac54b86cf9d5e9fd0dac21d9ebd39ab73510f3b3a10a894c35f1b3f0e8","tx_pos":1,"height":83930,"value":2435800000000},{"tx_hash":"d73530da14f5075f9976d9a17f1722bb2a42bd0d9893995b4e6f76001837ecb2","tx_pos":0,"height":331057,"value":87899999713},{"tx_hash":"87bc2c0ceae472f8865055713f64ff49fcd93fd739d52ced85f9df2b2cb8ba50","tx_pos":0,"height":414048,"value":2000000000}],"id":"clientID"}
            li
              p
                div.fw-bold mempool transactions
                div
                  em Returns the transactions in the mempool for the given script hash.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.get_mempool", "params": ["8b01df4e368ea28f8dc0423bcf7a4923e3a12d307c875e47a0cfbf90b5c39161"]}
                  code -> {"jsonrpc":"2.0","result":[],"id":"clientID"}
            li
              p
                div.fw-bold subscribe to script hash
                div
                  em Subcribes to the given script hash and the changes of the address balance and transactions.
                  p 
                    b {"id": "clientID", "method": "blockchain.scripthash.subscribe", "params": ["8b01df4e368ea28f8dc0423bcf7a4923e3a12d307c875e47a0cfbf90b5c39161"]}
                  code -> {"jsonrpc":"2.0","result":null,"id":"clientID"}
