extends layout

block content
  include ./includes/common.pug
  - var block_difficulty = parseFloat(block.difficulty).toFixed(4);
  - var theadClasses = [];
  if shared_pages.table_header_bgcolor != null && shared_pages.table_header_bgcolor != ''
    - theadClasses.push('table-' + shared_pages.table_header_bgcolor);
  script.
    $(document).ready(function() {
      $('#block-summary').dataTable({
        info: false,
        paging: false,
        searching: false,
        ordering: false,
        responsive: true,
        scrollX: false,
        fnDrawCallback: function(settings) {}
      });
      /* block.time_formatted = format_unixtime(#{block.time}) */
      $('span#timestampCol').html(format_unixtime(#{block.time}));

      if (#{shared_pages.date_time.enable_alt_timezone_tooltips} == true) {
        $('span#timestampCol').attr('data-bs-toggle', 'tooltip').attr('data-bs-placement', 'auto').attr('title', format_unixtime(#{block.time}, true));
        enableTooltips();
      }
    });
  .col-xs-12.col-md-12
    if block_page.page_header.show_img == true || block_page.page_header.show_title == true || block_page.page_header.show_description == true
      #page-header-container(style='align-items:' + (block_page.page_header.show_img == true && block_page.page_header.show_title == true && block_page.page_header.show_description == true ? 'flex-start' : 'center'))
        if block_page.page_header.show_img == true
          #header-img-container
            img#header-img(src=page_title_logo)
        #page-title-container
          if block_page.page_header.show_title == true
            h3#page-title #{settings.locale.block_title.replace('{1}', coin.name)}
          if block_page.page_header.show_description == true
            if block_page.page_header.show_title != true
              #page-title-container
                .sub-page-header.text-muted=settings.locale.block_description.replace('{1}', coin.name).replace('{2}', block.height)
            else
              .sub-page-header.text-muted=settings.locale.block_description.replace('{1}', coin.name).replace('{2}', block.height)
      .cardSpacer.clearfix
    .card.card-default.border-0.cardSpacer
      .card-header
        div(style='display: flex;flex-wrap: wrap;')
          if block.previousblockhash != null
            a(href='/block/' + block.previousblockhash)
              span.fa.fa-chevron-left.block-last(data-bs-toggle='tooltip', data-bs-placement='top', title=settings.locale.block_previous, style='color: var(--bs-body-color);')
            strong.d-none.d-md-block #{settings.locale.tx_block_hash}: #{block.hash}
            strong.d-block.d-md-none #{settings.locale.ex_summary}
          else
            strong.d-none.d-md-block(style='margin-left:10px;') #{settings.locale.tx_block_hash}: #{block.hash}
            strong.d-block.d-md-none(style='margin-left:10px;') #{settings.locale.ex_summary}
          if block.nextblockhash != null
            a(href='/block/' + block.nextblockhash)
              span.fa.fa-chevron-right.block-next(data-bs-toggle='tooltip', data-bs-placement='top', title=settings.locale.block_next, style='color: var(--bs-body-color);')
          if api_page.public_apis.rpc.getblock.enabled == true
            a.d-none.d-md-block(href='/api/getblock?hash=' + block.hash, style='margin-left:auto;', data-bs-toggle='tooltip', data-bs-placement='top', title=settings.locale.view_raw_block_data)
              span.fa.fa-info-circle(style='color: var(--bs-body-color);')
      table#block-summary.table.table-bordered.summary-table.bottom-border-0.single-row-table(style='border-top:0;margin-top:0 !important;')
        tbody
          - var difficulty = Number(block.difficulty).toLocaleString('en',{'minimumFractionDigits':4,'maximumFractionDigits':4,'useGrouping':true});
          - var splitDifficulty = difficulty.split('.');
          - var block_size = Number(block.size/1024).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
          - var splitBlockSize = block_size.split('.');
          tr
            td #{settings.locale.height}
            td=block.height
          tr
            td #{settings.locale.difficulty}
            td #{splitDifficulty[0]}.
              span.decimal #{splitDifficulty[1]}
          tr
            td #{settings.locale.confirmations}
            if block.confirmations >= confirmations
              td=block.confirmations
            else if block.confirmations < (confirmations / 2)
              td=block.confirmations
            else
              td=block.confirmations
          if settings.blockchain_specific.heavycoin.enabled == true
            tr
              td Vote
              td=block.vote
          tr
            td #{settings.locale.size} (kB)
            td #{splitBlockSize[0]}.
              span.decimal #{splitBlockSize[1]}
          tr
            td #{settings.locale.bits}
            td=block.bits
          tr
            td #{settings.locale.nonce}
            td=block.nonce
          tr
            td #{settings.locale.timestamp}
            td
              span#timestampCol=block.time
    if block.hash == block_page.genesis_block
      .alert.alert-info(role='alert', style='text-align:center;')
        strong #{settings.locale.block_genesis}
    else
      div#block-txs-wrapper.card.card-default.border-0
        .card-header
          strong Transactions
        table#block-txs.table.table-bordered.table-striped.table-hover.summary-table.mobile-border-right
          thead
            tr(class=theadClasses)
              // th.text-center.d-table-cell.d-md-none
              th.d-md-table-cell #{settings.locale.tx_hash}
              th.text-center Txout
              th.text-center #{coin.symbol}
          tbody
            each txn in txs
              tr
                // td.text-center.d-table-cell.d-md-none
                  a(href='/tx/' + txn.txid)
                    span.entity(data-bs-toggle='tooltip', data-bs-placement='top', title=settings.locale.view_tx) &#8627
                td.text-begin.txCol.d-md-table-cell
                  a.breakWord(href='/tx/' + txn.txid + '/' + net) #{txn.txid}
                td.text-center #{txn.vout.length}
                if txn.vout.length > 0
                  - var total = Number(txn.total / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split('.');
                  td.text-end #{totalParts[0]}.
                    span.decimal #{totalParts[1]}
                else
                  - var total = Number(txn.total).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':2,'useGrouping':true});
                  - var totalParts = total.split('.');
                  td.text-end #{totalParts[0]}.
                    span.decimal #{totalParts[1]}